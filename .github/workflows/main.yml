name: 'Run main workflow'

on:
  pull_request:
  push:
    branches:
      - "main"
    tags:
      - "*"

permissions:
  contents: write
  pull-requests: read

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  build:
    runs-on: "ubuntu-latest"
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'
      - name: Run check
        run: ./gradlew clean check
  release-snapshot:
    runs-on: "ubuntu-latest"
    timeout-minutes: 30
    needs:
      - build
    if: ${{ github.ref_type != 'tag' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'
      - name: Publish to maven local
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.MAVEN_SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.MAVEN_SIGNING_KEY_PASSWORD }}
        run: ./gradlew publishAndReleaseToMavenCentral
  release:
    runs-on: "ubuntu-latest"
    timeout-minutes: 30
    needs:
      - build
    if: ${{ github.ref_type == 'tag' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'
      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Set version for release
        run: |
          echo "${{ github.ref_name }}" > version.txt
      - name: Commit release version
        run: |
          git add version.txt
          git commit -m "chore: set version to ${{ github.ref_name }}"
      - name: Publish to maven repository
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.MAVEN_SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.MAVEN_SIGNING_KEY_PASSWORD }}
        run: ./gradlew publishAndReleaseToMavenCentral
      - name: Set version for next release
        id: next-release-version
        run: |
          NEXT_VERSION=$(echo ${{ github.ref_name }} | awk -F. -v OFS=. '{$NF += 1 ; print}')-SNAPSHOT
          echo "${NEXT_VERSION}" > version.txt
          echo "next-version=${NEXT_VERSION}" >> $GITHUB_OUTPUT
      - name: Commit next release version
        run: |
          git add version.txt
          git commit -m "chore: set version to ${{ steps.next-release-version.outputs.next-version }}"
          git push origin HEAD:main
      - name: Create Release
        uses: ncipollo/release-action@v1.18.0
        with:
          artifacts: 'build/libs/digital-blasphemy-client*.jar'
          generateReleaseNotes: true
          makeLatest: true
